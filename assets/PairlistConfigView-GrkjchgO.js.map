{"version":3,"file":"PairlistConfigView-GrkjchgO.js","sources":["../../src/types/pairlists.ts","../../src/components/general/CopyableTextfield.vue","../../src/stores/pairlistConfig.ts","../../src/components/ftbot/PairlistConfigParameter.vue","../../src/components/ftbot/PairlistConfigItem.vue","../../src/components/ftbot/PairlistConfigBlacklist.vue","../../src/components/ftbot/PairlistConfigActions.vue","../../src/components/ftbot/ExchangeSelect.vue","../../src/components/ftbot/PairlistConfigurator.vue"],"sourcesContent":["import { BackgroundTaskResult } from './backgroundtasks';\r\nimport { WhitelistResponse } from './blacklist';\r\nimport { MarginMode, TradingMode } from './types';\r\n\r\nexport interface PairlistsResponse {\r\n  pairlists: Pairlist[];\r\n}\r\n\r\nexport interface PairlistEvalResponse extends BackgroundTaskResult {\r\n  result: WhitelistResponse;\r\n}\r\n\r\nexport interface Pairlist {\r\n  id?: string;\r\n  is_pairlist_generator: boolean;\r\n  name: string;\r\n  description: string;\r\n  showParameters: boolean;\r\n  params: Record<string, PairlistParameter>;\r\n}\r\n\r\nexport interface PairlistConfig {\r\n  name: string;\r\n  blacklist: string[];\r\n  pairlists: Pairlist[];\r\n}\r\n\r\nexport enum PairlistParamType {\r\n  string = 'string',\r\n  number = 'number',\r\n  boolean = 'boolean',\r\n  option = 'option',\r\n}\r\n\r\nexport type PairlistParamValue = string | number | boolean;\r\n\r\ninterface PairlistParameterBase {\r\n  description: string;\r\n  help: string;\r\n  type: PairlistParamType;\r\n}\r\n\r\nexport interface StringPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.string;\r\n  value?: string;\r\n  default: string;\r\n}\r\n\r\nexport interface NumberPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.number;\r\n  value?: number;\r\n  default: number;\r\n}\r\n\r\nexport interface BooleanPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.boolean;\r\n  value?: boolean;\r\n  default: boolean;\r\n}\r\n\r\nexport interface OptionPairlistParameter extends PairlistParameterBase {\r\n  type: PairlistParamType.option;\r\n  options: string[];\r\n  value?: string;\r\n  default: string;\r\n}\r\n\r\nexport type PairlistParameter =\r\n  | StringPairlistParameter\r\n  | NumberPairlistParameter\r\n  | BooleanPairlistParameter\r\n  | OptionPairlistParameter;\r\n\r\nexport interface PairlistPayloadItem {\r\n  method: string;\r\n  [key: string]: string | number | boolean;\r\n}\r\n\r\nexport interface PairlistsPayload {\r\n  pairlists: PairlistPayloadItem[];\r\n  blacklist: string[];\r\n  stake_currency: string;\r\n  exchange?: string;\r\n  trading_mode?: TradingMode;\r\n  margin_mode?: MarginMode;\r\n}\r\n","<template>\r\n  <div class=\"copy-container position-relative\">\r\n    <i-mdi-content-copy\r\n      v-if=\"isSupported && isValid\"\r\n      role=\"button\"\r\n      class=\"copy-button position-absolute end-0 mt-1 me-2\"\r\n      @click=\"copy(typeof content === 'string' ? content : JSON.stringify(content))\"\r\n    />\r\n    <pre class=\"text-start border p-1 mb-0\"><code>{{ content }}</code></pre>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useClipboard } from '@vueuse/core';\r\n\r\ndefineProps({\r\n  content: { type: [String, Array<string>], required: true },\r\n  isValid: { type: Boolean, default: true },\r\n});\r\n\r\nconst { copy, isSupported } = useClipboard();\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.copy-container {\r\n  .copy-button {\r\n    opacity: 0;\r\n  }\r\n\r\n  &:hover {\r\n    .copy-button {\r\n      opacity: 1;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { defineStore } from 'pinia';\r\nimport { useBotStore } from './ftbotwrapper';\r\n\r\nimport {\r\n  ExchangeSelection,\r\n  MarginMode,\r\n  Pairlist,\r\n  PairlistConfig,\r\n  PairlistParamType,\r\n  PairlistParamValue,\r\n  PairlistPayloadItem,\r\n  PairlistsPayload,\r\n  TradingMode,\r\n} from '@/types';\r\n\r\nimport { showAlert } from '../shared/alerts';\r\nimport { isNotUndefined } from '@/shared/formatters';\r\n\r\nexport const usePairlistConfigStore = defineStore(\r\n  'pairlistConfig',\r\n  () => {\r\n    const botStore = useBotStore();\r\n\r\n    const evaluating = ref<boolean>(false);\r\n    const intervalId = ref<number>();\r\n    const stakeCurrency = ref<string>(botStore.activeBot?.stakeCurrency ?? 'USDT');\r\n    const whitelist = ref<string[]>([]);\r\n    const customExchange = ref<boolean>(false);\r\n    const selectedExchange = ref<ExchangeSelection>({\r\n      exchange: botStore.activeBot?.botState.exchange ?? '',\r\n      trade_mode: {\r\n        trading_mode: botStore.activeBot?.botState.trading_mode ?? TradingMode.SPOT,\r\n        margin_mode:\r\n          botStore.activeBot?.botState.trading_mode === TradingMode.FUTURES\r\n            ? MarginMode.ISOLATED\r\n            : MarginMode.NONE,\r\n      },\r\n    });\r\n\r\n    const config = ref<PairlistConfig>(makeConfig());\r\n    const savedConfigs = ref<PairlistConfig[]>([]);\r\n    const configName = ref<string>('');\r\n\r\n    const firstPairlistIsGenerator = computed<boolean>(() => {\r\n      // First pairlist must be a generator\r\n      if (config.value.pairlists[0]?.is_pairlist_generator) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    const pairlistValid = computed<boolean>(() => {\r\n      return firstPairlistIsGenerator.value && config.value.pairlists.length > 0;\r\n    });\r\n\r\n    const configJSON = computed(() => {\r\n      return JSON.stringify(configToPayloadItems(), null, 2);\r\n    });\r\n\r\n    const isSavedConfig = (name: string) =>\r\n      savedConfigs.value.findIndex((c) => c.name === name) > -1;\r\n\r\n    function addToConfig(pairlist: Pairlist, index: number) {\r\n      pairlist = structuredClone(toRaw(pairlist));\r\n      pairlist.showParameters = false;\r\n      if (!pairlist.id) {\r\n        pairlist.id = Date.now().toString(36) + Math.random().toString(36).substring(2);\r\n      }\r\n      for (const param in pairlist.params) {\r\n        pairlist.params[param].value = isNotUndefined(pairlist.params[param].default)\r\n          ? pairlist.params[param].default\r\n          : '';\r\n      }\r\n      config.value.pairlists.splice(index, 0, pairlist);\r\n    }\r\n\r\n    function removeFromConfig(index: number) {\r\n      config.value.pairlists.splice(index, 1);\r\n    }\r\n\r\n    function saveConfig(name = '') {\r\n      const i = savedConfigs.value.findIndex((c) => c.name === config.value.name);\r\n      config.value.name = name;\r\n\r\n      if (i > -1) {\r\n        savedConfigs.value[i] = structuredClone(toRaw(config.value));\r\n      } else {\r\n        savedConfigs.value.push(structuredClone(toRaw(config.value)));\r\n      }\r\n    }\r\n\r\n    function newConfig(name: string) {\r\n      const c = makeConfig({ name });\r\n      savedConfigs.value.push(c);\r\n      config.value = structuredClone(c);\r\n    }\r\n\r\n    function duplicateConfig(name = '') {\r\n      const c = makeConfig({\r\n        name,\r\n        pairlists: toRaw(config.value.pairlists) as [],\r\n        blacklist: toRaw(config.value.blacklist) as [],\r\n      });\r\n      savedConfigs.value.push(c);\r\n      config.value = structuredClone(c);\r\n    }\r\n\r\n    function deleteConfig() {\r\n      const i = savedConfigs.value.findIndex((c) => c.name === config.value.name);\r\n      if (i > -1) {\r\n        savedConfigs.value.splice(i, 1);\r\n        selectOrCreateConfig(\r\n          savedConfigs.value.length > 0 ? savedConfigs.value[0].name : 'default',\r\n        );\r\n      }\r\n    }\r\n\r\n    function selectOrCreateConfig(name: string) {\r\n      const c = savedConfigs.value.find((c) => name === c.name);\r\n      if (c) {\r\n        config.value = structuredClone(toRaw(c));\r\n      } else {\r\n        newConfig(name);\r\n      }\r\n    }\r\n\r\n    function makeConfig({ name = '', pairlists = [], blacklist = [] } = {}): PairlistConfig {\r\n      return { name, pairlists, blacklist };\r\n    }\r\n\r\n    function addToBlacklist() {\r\n      config.value.blacklist.push('');\r\n    }\r\n\r\n    function removeFromBlacklist(index: number) {\r\n      config.value.blacklist.splice(index, 1);\r\n    }\r\n\r\n    function duplicateBlacklist(configName: string) {\r\n      const conf = savedConfigs.value.find((c) => c.name === configName);\r\n      if (conf) {\r\n        config.value.blacklist = structuredClone(toRaw(conf.blacklist));\r\n      }\r\n    }\r\n\r\n    async function startPairlistEvaluation() {\r\n      const payload: PairlistsPayload = configToPayload();\r\n\r\n      evaluating.value = true;\r\n      try {\r\n        const { job_id: jobId } = await botStore.activeBot.evaluatePairlist(payload);\r\n        console.log('jobId', jobId);\r\n\r\n        intervalId.value = setInterval(async () => {\r\n          const res = await botStore.activeBot.getBackgroundJobStatus(jobId);\r\n          if (!res.running) {\r\n            clearInterval(intervalId.value);\r\n            const wl = await botStore.activeBot.getPairlistEvalResult(jobId);\r\n            evaluating.value = false;\r\n            if (wl.status === 'success') {\r\n              whitelist.value = wl.result.whitelist;\r\n            } else if (wl.error) {\r\n              showAlert(wl.error, 'danger');\r\n              evaluating.value = false;\r\n            }\r\n          }\r\n        }, 1000);\r\n      } catch (error) {\r\n        showAlert('Evaluation failed', 'danger');\r\n        evaluating.value = false;\r\n      }\r\n    }\r\n\r\n    function convertToParamType(type: PairlistParamType, value: PairlistParamValue) {\r\n      if (type === PairlistParamType.number) {\r\n        return Number(value);\r\n      } else if (type === PairlistParamType.boolean) {\r\n        return Boolean(value);\r\n      } else {\r\n        return String(value);\r\n      }\r\n    }\r\n\r\n    function configToPayload(): PairlistsPayload {\r\n      const pairlists: PairlistPayloadItem[] = configToPayloadItems();\r\n      const c: PairlistsPayload = {\r\n        pairlists: pairlists,\r\n        stake_currency: stakeCurrency.value,\r\n        blacklist: config.value.blacklist,\r\n      };\r\n      if (customExchange.value) {\r\n        console.log('setting custom exchange props');\r\n        c.exchange = selectedExchange.value.exchange;\r\n        c.trading_mode = selectedExchange.value.trade_mode.trading_mode;\r\n        c.margin_mode = selectedExchange.value.trade_mode.margin_mode;\r\n      }\r\n      return c;\r\n    }\r\n\r\n    function configToPayloadItems() {\r\n      const pairlists: PairlistPayloadItem[] = [];\r\n      config.value.pairlists.forEach((config) => {\r\n        const pairlist = {\r\n          method: config.name,\r\n        };\r\n        for (const key in config.params) {\r\n          const param = config.params[key];\r\n          if (param.value) {\r\n            pairlist[key] = convertToParamType(param.type, param.value);\r\n          }\r\n        }\r\n        pairlists.push(pairlist);\r\n      });\r\n\r\n      return pairlists;\r\n    }\r\n\r\n    watch(\r\n      () => config.value,\r\n      () => {\r\n        configName.value = config.value.name;\r\n      },\r\n      {\r\n        deep: true,\r\n      },\r\n    );\r\n\r\n    return {\r\n      evaluating,\r\n      whitelist,\r\n      config,\r\n      configJSON,\r\n      savedConfigs,\r\n      configName,\r\n      startPairlistEvaluation,\r\n      addToConfig,\r\n      removeFromConfig,\r\n      saveConfig,\r\n      duplicateConfig,\r\n      deleteConfig,\r\n      newConfig,\r\n      selectOrCreateConfig,\r\n      addToBlacklist,\r\n      removeFromBlacklist,\r\n      duplicateBlacklist,\r\n      isSavedConfig,\r\n      firstPairlistIsGenerator,\r\n      pairlistValid,\r\n      stakeCurrency,\r\n      customExchange,\r\n      selectedExchange,\r\n    };\r\n  },\r\n  {\r\n    persist: {\r\n      key: 'ftPairlistConfig',\r\n      paths: ['savedConfigs', 'configName'],\r\n    },\r\n  },\r\n);\r\n","<template>\r\n  <b-form-group label-cols=\"4\" label-size=\"md\" class=\"pb-1 text-start\" :description=\"param.help\">\r\n    <b-form-input\r\n      v-if=\"param.type === PairlistParamType.string || param.type === PairlistParamType.number\"\r\n      v-model=\"paramValue\"\r\n      size=\"sm\"\r\n    ></b-form-input>\r\n\r\n    <b-form-checkbox\r\n      v-if=\"param.type === PairlistParamType.boolean\"\r\n      v-model=\"paramValue\"\r\n    ></b-form-checkbox>\r\n\r\n    <b-form-select\r\n      v-if=\"param.type === PairlistParamType.option\"\r\n      v-model=\"paramValue\"\r\n      :options=\"param.options\"\r\n    ></b-form-select>\r\n\r\n    <template #label>\r\n      <label> {{ param.description }}</label>\r\n    </template>\r\n  </b-form-group>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { PairlistParameter, PairlistParamType } from '@/types';\r\n\r\ndefineProps<{\r\n  param: PairlistParameter;\r\n}>();\r\n\r\n// TODO: type should really be PairlistParamValue\r\nconst paramValue = defineModel<any>();\r\n</script>\r\n","<template>\r\n  <b-card no-body class=\"mb-2\">\r\n    <template #header>\r\n      <div class=\"d-flex text-start align-items-center\">\r\n        <div class=\"d-flex flex-grow-1 align-items-center\">\r\n          <i-mdi-reorder-horizontal\r\n            role=\"button\"\r\n            class=\"handle me-2 fs-4 flex-shrink-0\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n          />\r\n          <div\r\n            role=\"button\"\r\n            class=\"d-flex flex-grow-1 align-items-start flex-column user-select-none\"\r\n            @click=\"toggleVisible\"\r\n          >\r\n            <span class=\"fw-bold\">{{ pairlist.name }}</span>\r\n            <span class=\"text-small\">{{ pairlist.description }}</span>\r\n          </div>\r\n        </div>\r\n        <i-mdi-close\r\n          role=\"button\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          class=\"mx-2\"\r\n          @click=\"pairlistStore.removeFromConfig(index)\"\r\n        />\r\n        <i-mdi-chevron-down\r\n          v-if=\"!pairlist.showParameters\"\r\n          :class=\"hasParameters && !pairlist.showParameters ? 'visible' : 'invisible'\"\r\n          role=\"button\"\r\n          class=\"fs-4\"\r\n          @click=\"toggleVisible\"\r\n        />\r\n        <i-mdi-chevron-up\r\n          v-if=\"pairlist.showParameters\"\r\n          :class=\"hasParameters && pairlist.showParameters ? 'visible' : 'invisible'\"\r\n          role=\"button\"\r\n          class=\"fs-4\"\r\n          @click=\"toggleVisible\"\r\n        />\r\n      </div>\r\n    </template>\r\n    <b-collapse v-model=\"pairlist.showParameters\">\r\n      <b-card-body>\r\n        <PairlistConfigParameter\r\n          v-for=\"(parameter, key) in pairlist.params\"\r\n          :key=\"key\"\r\n          v-model=\"pairlist.params[key].value\"\r\n          :param=\"parameter\"\r\n        />\r\n      </b-card-body>\r\n    </b-collapse>\r\n  </b-card>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\r\nimport { Pairlist } from '@/types';\r\n\r\nconst pairlistStore = usePairlistConfigStore();\r\n\r\ndefineProps<{\r\n  index: number;\r\n}>();\r\n\r\nconst pairlist = defineModel<Pairlist>({ required: true });\r\n\r\nconst hasParameters = computed(() => Object.keys(pairlist.value.params).length > 0);\r\n\r\nfunction toggleVisible() {\r\n  if (hasParameters.value) {\r\n    pairlist.value.showParameters = !pairlist.value.showParameters;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","<template>\r\n  <b-card no-body class=\"mb-2\">\r\n    <template #header>\r\n      <div\r\n        class=\"d-flex flex-row align-items-center justify-content-between\"\r\n        role=\"button\"\r\n        @click=\"visible = !visible\"\r\n      >\r\n        <span class=\"fw-bold fd-italic\">Blacklist</span>\r\n        <i-mdi-chevron-down\r\n          v-if=\"!visible\"\r\n          :class=\"!visible ? 'visible' : 'invisible'\"\r\n          role=\"button\"\r\n          class=\"fs-4\"\r\n        />\r\n        <i-mdi-chevron-up\r\n          v-if=\"visible\"\r\n          :class=\"visible ? 'visible' : 'invisible'\"\r\n          role=\"button\"\r\n          class=\"fs-4\"\r\n        />\r\n      </div>\r\n    </template>\r\n    <b-collapse v-model=\"visible\">\r\n      <b-card-body>\r\n        <div class=\"d-flex mb-4 align-items-center gap-2\">\r\n          <span class=\"col-auto\">Copy from:</span\r\n          ><b-form-select v-model=\"copyFromConfig\" size=\"sm\" :options=\"configNames\" />\r\n          <b-button title=\"Copy\" size=\"sm\" @click=\"pairlistStore.duplicateBlacklist(copyFromConfig)\"\r\n            ><i-mdi-content-copy\r\n          /></b-button>\r\n        </div>\r\n        <b-input-group\r\n          v-for=\"(item, i) in pairlistStore.config.blacklist\"\r\n          :key=\"i\"\r\n          class=\"mb-2\"\r\n          size=\"sm\"\r\n        >\r\n          <b-form-input v-model=\"pairlistStore.config.blacklist[i]\" />\r\n          <b-input-group-append>\r\n            <b-button size=\"sm\" @click=\"pairlistStore.removeFromBlacklist(i)\"\r\n              ><i-mdi-close\r\n            /></b-button>\r\n          </b-input-group-append>\r\n        </b-input-group>\r\n        <b-button size=\"sm\" @click=\"pairlistStore.addToBlacklist()\">Add</b-button>\r\n      </b-card-body>\r\n    </b-collapse>\r\n  </b-card>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\r\nconst pairlistStore = usePairlistConfigStore();\r\nconst copyFromConfig = ref('');\r\nconst visible = ref(false);\r\n\r\nconst configNames = computed(() =>\r\n  pairlistStore.savedConfigs.filter((c) => c.name !== pairlistStore.config.name).map((c) => c.name),\r\n);\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n","<template>\r\n  <div class=\"d-flex flex-column flex-sm-row mb-2 gap-2\">\r\n    <b-button\r\n      title=\"Save configuration\"\r\n      size=\"sm\"\r\n      variant=\"primary\"\r\n      @click=\"pairlistStore.saveConfig(pairlistStore.config.name)\"\r\n    >\r\n      <i-mdi-content-save />\r\n    </b-button>\r\n    <edit-value\r\n      v-model=\"pairlistStore.config.name\"\r\n      editable-name=\"config\"\r\n      :allow-add=\"true\"\r\n      :allow-duplicate=\"true\"\r\n      :allow-edit=\"true\"\r\n      class=\"d-flex flex-grow-1\"\r\n      @delete=\"pairlistStore.deleteConfig\"\r\n      @duplicate=\"(oldName: string, newName: string) => pairlistStore.duplicateConfig(newName)\"\r\n      @new=\"(name: string) => pairlistStore.newConfig(name)\"\r\n      @rename=\"(oldName: string, newName: string) => pairlistStore.saveConfig(newName)\"\r\n    >\r\n      <b-form-select\r\n        v-model=\"pairlistStore.configName\"\r\n        size=\"sm\"\r\n        :options=\"pairlistStore.savedConfigs.map((c) => c.name)\"\r\n        @change=\"(config) => pairlistStore.selectOrCreateConfig(config as string)\"\r\n      />\r\n    </edit-value>\r\n    <b-button\r\n      title=\"Evaluate pairlist\"\r\n      :disabled=\"pairlistStore.evaluating || !pairlistStore.pairlistValid\"\r\n      variant=\"primary\"\r\n      class=\"px-5\"\r\n      size=\"sm\"\r\n      @click=\"pairlistStore.startPairlistEvaluation()\"\r\n    >\r\n      <b-spinner v-if=\"pairlistStore.evaluating\" small></b-spinner>\r\n      <span>{{ pairlistStore.evaluating ? '' : 'Evaluate' }}</span>\r\n    </b-button>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\r\nimport EditValue from '../general/EditValue.vue';\r\nconst pairlistStore = usePairlistConfigStore();\r\n</script>\r\n","<template>\r\n  <div class=\"w-100 d-flex\">\r\n    <b-form-select\r\n      id=\"exchange-select\"\r\n      v-model=\"exchangeModel.exchange\"\r\n      size=\"sm\"\r\n      :options=\"exchangeList\"\r\n    >\r\n    </b-form-select>\r\n    <b-form-select\r\n      id=\"tradeMode-select\"\r\n      v-model=\"exchangeModel.trade_mode\"\r\n      size=\"sm\"\r\n      :options=\"tradeModes\"\r\n      :disabled=\"tradeModes.length < 2\"\r\n    >\r\n    </b-form-select>\r\n    <div class=\"ms-2\">\r\n      <b-button size=\"sm\" @click=\"botStore.activeBot.getExchangeList\">\r\n        <i-mdi-refresh />\r\n      </b-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useBotStore } from '@/stores/ftbotwrapper';\r\n\r\nimport { ExchangeSelection } from '@/types';\r\n\r\nconst exchangeModel = defineModel({\r\n  type: Object as () => ExchangeSelection,\r\n  required: true,\r\n});\r\nconst botStore = useBotStore();\r\n\r\nconst exchangeList = computed(() => {\r\n  const supported = botStore.activeBot.exchangeList\r\n    .filter((ex) => ex.valid && ex.supported)\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  const unsupported = botStore.activeBot.exchangeList\r\n    .filter((ex) => ex.valid && !ex.supported)\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  return [\r\n    { label: 'Supported', options: supported.map((e) => e.name) },\r\n    { label: 'Unsupported', options: unsupported.map((e) => e.name) },\r\n  ];\r\n});\r\n\r\nconst tradeModesTyped = computed(() => {\r\n  const val = botStore.activeBot.exchangeList.find(\r\n    (ex) => ex.name === exchangeModel.value.exchange,\r\n  )?.trade_modes;\r\n  return val ?? [];\r\n});\r\n\r\nconst tradeModes = computed<Record<string, unknown>[]>(() => {\r\n  return tradeModesTyped.value.map((tm) => {\r\n    return (\r\n      {\r\n        text: `${tm.margin_mode} ${tm.trading_mode}`,\r\n        value: tm,\r\n      } ?? []\r\n    );\r\n  }) as Record<string, unknown>[];\r\n});\r\n\r\nwatch(\r\n  () => exchangeModel.value.exchange,\r\n  () => {\r\n    if (tradeModesTyped.value.length < 2) {\r\n      exchangeModel.value.trade_mode = tradeModesTyped.value[0];\r\n    }\r\n  },\r\n);\r\n\r\nonMounted(() => {\r\n  if (botStore.activeBot.exchangeList.length === 0) {\r\n    botStore.activeBot.getExchangeList();\r\n  }\r\n});\r\n</script>\r\n","<template>\r\n  <div class=\"d-flex px-3 mb-3 gap-3 flex-column flex-lg-row\">\r\n    <b-list-group ref=\"availablePairlistsEl\" class=\"available-pairlists\">\r\n      <b-list-group-item\r\n        v-for=\"pairlist in availablePairlists\"\r\n        :key=\"pairlist.name\"\r\n        :class=\"{\r\n          'no-drag': pairlistStore.config.pairlists.length == 0 && !pairlist.is_pairlist_generator,\r\n        }\"\r\n        class=\"pairlist d-flex text-start align-items-center py-2 px-3\"\r\n      >\r\n        <div class=\"d-flex flex-grow-1 align-items-start flex-column\">\r\n          <span class=\"fw-bold\">{{ pairlist.name }}</span>\r\n          <span class=\"text-small\">{{ pairlist.description }}</span>\r\n        </div>\r\n        <b-button\r\n          class=\"p-0 add-pairlist\"\r\n          style=\"border: none\"\r\n          variant=\"outline-light\"\r\n          :disabled=\"pairlistStore.config.pairlists.length == 0 && !pairlist.is_pairlist_generator\"\r\n          @click=\"pairlistStore.addToConfig(pairlist, pairlistStore.config.pairlists.length)\"\r\n        >\r\n          <i-mdi-arrow-right-bold-box-outline class=\"fs-4\" />\r\n        </b-button>\r\n      </b-list-group-item>\r\n    </b-list-group>\r\n    <div class=\"d-flex flex-column flex-fill\">\r\n      <PairlistConfigActions />\r\n      <div class=\"border rounded-1 p-2 mb-2\">\r\n        <div class=\"d-flex align-items-center gap-2 my-2\">\r\n          <span class=\"col-auto\">Stake currency: </span>\r\n          <b-form-input v-model=\"pairlistStore.stakeCurrency\" size=\"sm\" />\r\n        </div>\r\n\r\n        <div class=\"mb-2 border rounded-1 p-2 text-start\">\r\n          <b-form-checkbox v-model=\"pairlistStore.customExchange\" class=\"mb-2\">\r\n            Custom Exchange\r\n          </b-form-checkbox>\r\n          <exchange-select\r\n            v-if=\"pairlistStore.customExchange\"\r\n            v-model=\"pairlistStore.selectedExchange\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <PairlistConfigBlacklist />\r\n      <b-alert\r\n        :model-value=\"\r\n          pairlistStore.config.pairlists.length > 0 && !pairlistStore.firstPairlistIsGenerator\r\n        \"\r\n        variant=\"warning\"\r\n      >\r\n        First entry in the pairlist must be a Generating pairlist, like StaticPairList or\r\n        VolumePairList.\r\n      </b-alert>\r\n      <div\r\n        ref=\"pairlistConfigsEl\"\r\n        class=\"d-flex flex-column flex-grow-1 position-relative border rounded-1 p-1\"\r\n        :class=\"{ empty: configEmpty }\"\r\n      >\r\n        <PairlistConfigItem\r\n          v-for=\"(pairlist, i) in pairlistStore.config.pairlists\"\r\n          :key=\"pairlist.id\"\r\n          v-model=\"pairlistStore.config.pairlists[i]\"\r\n          :index=\"i\"\r\n          @remove=\"pairlistStore.removeFromConfig\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"d-flex flex-column col-12 col-lg-3\">\r\n      <b-form-radio-group v-model=\"selectedView\" class=\"mb-2\" size=\"sm\" buttons>\r\n        <b-form-radio button value=\"Config\"> Config</b-form-radio>\r\n        <b-form-radio button value=\"Results\" :disabled=\"pairlistStore.whitelist.length === 0\">\r\n          Results</b-form-radio\r\n        >\r\n      </b-form-radio-group>\r\n      <div class=\"position-relative flex-fill overflow-auto\">\r\n        <CopyableTextfield\r\n          v-if=\"selectedView === 'Config'\"\r\n          class=\"position-lg-absolute w-100\"\r\n          :content=\"pairlistStore.configJSON\"\r\n          :is-valid=\"pairlistStore.pairlistValid\"\r\n        />\r\n        <CopyableTextfield\r\n          v-if=\"selectedView === 'Results'\"\r\n          class=\"position-lg-absolute w-100\"\r\n          :content=\"pairlistStore.whitelist\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { useBotStore } from '@/stores/ftbotwrapper';\r\nimport { usePairlistConfigStore } from '@/stores/pairlistConfig';\r\nimport PairlistConfigItem from './PairlistConfigItem.vue';\r\nimport PairlistConfigBlacklist from './PairlistConfigBlacklist.vue';\r\nimport PairlistConfigActions from './PairlistConfigActions.vue';\r\nimport { Pairlist } from '@/types';\r\nimport { useSortable, moveArrayElement } from '@vueuse/integrations/useSortable';\r\nimport ExchangeSelect from './ExchangeSelect.vue';\r\n\r\nconst botStore = useBotStore();\r\nconst pairlistStore = usePairlistConfigStore();\r\n\r\nconst availablePairlists = ref<Pairlist[]>([]);\r\nconst pairlistConfigsEl = ref<HTMLElement | null>(null);\r\nconst availablePairlistsEl = ref<HTMLElement | null>(null);\r\nconst selectedView = ref<'Config' | 'Results'>('Config');\r\n\r\nconst configEmpty = computed(() => {\r\n  return pairlistStore.config.pairlists.length == 0;\r\n});\r\n\r\nuseSortable(availablePairlistsEl, availablePairlists.value, {\r\n  group: {\r\n    name: 'configurator',\r\n    pull: 'clone',\r\n    put: false,\r\n  },\r\n  sort: false,\r\n  filter: '.no-drag',\r\n  dragClass: 'dragging',\r\n});\r\n\r\nuseSortable(pairlistConfigsEl, pairlistStore.config.pairlists, {\r\n  handle: '.handle',\r\n  group: 'configurator',\r\n  onUpdate: async (e) => {\r\n    moveArrayElement(pairlistStore.config.pairlists, e.oldIndex, e.newIndex);\r\n  },\r\n  onAdd: (e) => {\r\n    const pairlist = availablePairlists.value[e.oldIndex];\r\n    pairlistStore.addToConfig(pairlist, e.newIndex);\r\n    // quick fix from: https://github.com/SortableJS/Sortable/issues/1515\r\n    e.clone.replaceWith(e.item);\r\n    e.clone.remove();\r\n  },\r\n});\r\n\r\nonMounted(async () => {\r\n  availablePairlists.value = (await botStore.activeBot.getPairlists()).pairlists.sort((a, b) =>\r\n    // Sort by is_pairlist_generator (by name), then by name.\r\n    // TODO: this might need to be improved\r\n    a.is_pairlist_generator === b.is_pairlist_generator\r\n      ? a.name.localeCompare(b.name)\r\n      : a.is_pairlist_generator\r\n        ? -1\r\n        : 1,\r\n  );\r\n  pairlistStore.selectOrCreateConfig(\r\n    pairlistStore.isSavedConfig(pairlistStore.configName) ? pairlistStore.configName : 'default',\r\n  );\r\n});\r\n\r\nwatch(\r\n  () => pairlistStore.whitelist,\r\n  () => {\r\n    selectedView.value = 'Results';\r\n  },\r\n);\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.pairlist {\r\n  &:hover {\r\n    cursor: grab;\r\n  }\r\n  &.no-drag {\r\n    color: gray;\r\n  }\r\n  &.no-drag:hover {\r\n    cursor: default;\r\n  }\r\n  &.dragging {\r\n    border: 1px solid white;\r\n    border-radius: 0;\r\n  }\r\n}\r\n\r\n[data-bs-theme='light'] .add-pairlist {\r\n  color: black;\r\n}\r\n\r\n.empty {\r\n  &:after {\r\n    content: 'Drag pairlist here';\r\n    position: absolute;\r\n    align-self: center;\r\n    font-size: 1.1rem;\r\n    text-transform: uppercase;\r\n    line-height: 0;\r\n    top: 50%;\r\n  }\r\n}\r\n</style>\r\n"],"names":["PairlistParamType","copy","isSupported","useClipboard","usePairlistConfigStore","defineStore","botStore","useBotStore","evaluating","ref","intervalId","stakeCurrency","_a","whitelist","customExchange","selectedExchange","_b","_c","TradingMode","_d","MarginMode","config","makeConfig","savedConfigs","configName","firstPairlistIsGenerator","computed","pairlistValid","configJSON","configToPayloadItems","isSavedConfig","name","c","addToConfig","pairlist","index","toRaw","param","isNotUndefined","removeFromConfig","saveConfig","i","newConfig","duplicateConfig","deleteConfig","selectOrCreateConfig","pairlists","blacklist","addToBlacklist","removeFromBlacklist","duplicateBlacklist","conf","startPairlistEvaluation","payload","configToPayload","jobId","wl","showAlert","convertToParamType","type","value","key","watch","paramValue","_useModel","__props","pairlistStore","hasParameters","toggleVisible","copyFromConfig","visible","configNames","exchangeModel","exchangeList","supported","ex","a","b","unsupported","e","tradeModesTyped","tradeModes","tm","onMounted","availablePairlists","pairlistConfigsEl","availablePairlistsEl","selectedView","configEmpty","useSortable","moveArrayElement"],"mappings":"snBA2BY,IAAAA,GAAAA,IACVA,EAAA,OAAS,SACTA,EAAA,OAAS,SACTA,EAAA,QAAU,UACVA,EAAA,OAAS,SAJCA,IAAAA,GAAA,CAAA,CAAA,4NCPZ,KAAM,CAAE,KAAAC,EAAM,YAAAC,CAAY,EAAIC,GAAa,kqBCF9BC,EAAyBC,GACpC,iBACA,IAAM,iBACJ,MAAMC,EAAWC,IAEXC,EAAaC,EAAa,EAAK,EAC/BC,EAAaD,IACbE,EAAgBF,IAAYG,GAAAN,EAAS,YAAT,YAAAM,GAAoB,gBAAiB,MAAM,EACvEC,EAAYJ,EAAc,CAAA,CAAE,EAC5BK,EAAiBL,EAAa,EAAK,EACnCM,EAAmBN,EAAuB,CAC9C,WAAUO,GAAAV,EAAS,YAAT,YAAAU,GAAoB,SAAS,WAAY,GACnD,WAAY,CACV,eAAcC,GAAAX,EAAS,YAAT,YAAAW,GAAoB,SAAS,eAAgBC,GAAY,KACvE,cACEC,GAAAb,EAAS,YAAT,YAAAa,GAAoB,SAAS,gBAAiBD,GAAY,QACtDE,GAAW,SACXA,GAAW,IACnB,CAAA,CACD,EAEKC,EAASZ,EAAoBa,EAAA,CAAY,EACzCC,EAAed,EAAsB,CAAA,CAAE,EACvCe,EAAaf,EAAY,EAAE,EAE3BgB,EAA2BC,EAAkB,IAAM,OAEvD,MAAI,IAAAd,EAAAS,EAAO,MAAM,UAAU,CAAC,IAAxB,MAAAT,EAA2B,sBAGxB,CACR,EAEKe,EAAgBD,EAAkB,IAC/BD,EAAyB,OAASJ,EAAO,MAAM,UAAU,OAAS,CAC1E,EAEKO,EAAaF,EAAS,IACnB,KAAK,UAAUG,GAAqB,EAAG,KAAM,CAAC,CACtD,EAEKC,EAAiBC,GACrBR,EAAa,MAAM,UAAWS,GAAMA,EAAE,OAASD,CAAI,EAAI,GAEhD,SAAAE,EAAYC,EAAoBC,EAAe,CAC3CD,EAAA,gBAAgBE,EAAMF,CAAQ,CAAC,EAC1CA,EAAS,eAAiB,GACrBA,EAAS,KACZA,EAAS,GAAK,KAAK,IAAI,EAAE,SAAS,EAAE,EAAI,KAAK,OAAA,EAAS,SAAS,EAAE,EAAE,UAAU,CAAC,GAErE,UAAAG,KAASH,EAAS,OAC3BA,EAAS,OAAOG,CAAK,EAAE,MAAQC,GAAeJ,EAAS,OAAOG,CAAK,EAAE,OAAO,EACxEH,EAAS,OAAOG,CAAK,EAAE,QACvB,GAENhB,EAAO,MAAM,UAAU,OAAOc,EAAO,EAAGD,CAAQ,CAClD,CAEA,SAASK,EAAiBJ,EAAe,CACvCd,EAAO,MAAM,UAAU,OAAOc,EAAO,CAAC,CACxC,CAES,SAAAK,EAAWT,EAAO,GAAI,CACvB,MAAAU,EAAIlB,EAAa,MAAM,UAAWS,GAAMA,EAAE,OAASX,EAAO,MAAM,IAAI,EAC1EA,EAAO,MAAM,KAAOU,EAEhBU,EAAI,GACNlB,EAAa,MAAMkB,CAAC,EAAI,gBAAgBL,EAAMf,EAAO,KAAK,CAAC,EAE3DE,EAAa,MAAM,KAAK,gBAAgBa,EAAMf,EAAO,KAAK,CAAC,CAAC,CAEhE,CAEA,SAASqB,EAAUX,EAAc,CAC/B,MAAMC,EAAIV,EAAW,CAAE,KAAAS,CAAM,CAAA,EAChBR,EAAA,MAAM,KAAKS,CAAC,EAClBX,EAAA,MAAQ,gBAAgBW,CAAC,CAClC,CAES,SAAAW,EAAgBZ,EAAO,GAAI,CAClC,MAAMC,EAAIV,EAAW,CACnB,KAAAS,EACA,UAAWK,EAAMf,EAAO,MAAM,SAAS,EACvC,UAAWe,EAAMf,EAAO,MAAM,SAAS,CAAA,CACxC,EACYE,EAAA,MAAM,KAAKS,CAAC,EAClBX,EAAA,MAAQ,gBAAgBW,CAAC,CAClC,CAEA,SAASY,GAAe,CAChB,MAAAH,EAAIlB,EAAa,MAAM,UAAWS,GAAMA,EAAE,OAASX,EAAO,MAAM,IAAI,EACtEoB,EAAI,KACOlB,EAAA,MAAM,OAAOkB,EAAG,CAAC,EAC9BI,EACEtB,EAAa,MAAM,OAAS,EAAIA,EAAa,MAAM,CAAC,EAAE,KAAO,SAAA,EAGnE,CAEA,SAASsB,EAAqBd,EAAc,CACpC,MAAAC,EAAIT,EAAa,MAAM,KAAMS,GAAMD,IAASC,EAAE,IAAI,EACpDA,EACFX,EAAO,MAAQ,gBAAgBe,EAAMJ,CAAC,CAAC,EAEvCU,EAAUX,CAAI,CAElB,CAEA,SAAST,EAAW,CAAE,KAAAS,EAAO,GAAI,UAAAe,EAAY,CAAA,EAAI,UAAAC,EAAY,EAAO,EAAA,GAAoB,CAC/E,MAAA,CAAE,KAAAhB,EAAM,UAAAe,EAAW,UAAAC,EAC5B,CAEA,SAASC,GAAiB,CACjB3B,EAAA,MAAM,UAAU,KAAK,EAAE,CAChC,CAEA,SAAS4B,GAAoBd,EAAe,CAC1Cd,EAAO,MAAM,UAAU,OAAOc,EAAO,CAAC,CACxC,CAEA,SAASe,GAAmB1B,EAAoB,CACxC,MAAA2B,EAAO5B,EAAa,MAAM,KAAMS,GAAMA,EAAE,OAASR,CAAU,EAC7D2B,IACF9B,EAAO,MAAM,UAAY,gBAAgBe,EAAMe,EAAK,SAAS,CAAC,EAElE,CAEA,eAAeC,IAA0B,CACvC,MAAMC,EAA4BC,KAElC9C,EAAW,MAAQ,GACf,GAAA,CACI,KAAA,CAAE,OAAQ+C,GAAU,MAAMjD,EAAS,UAAU,iBAAiB+C,CAAO,EACnE,QAAA,IAAI,QAASE,CAAK,EAEf7C,EAAA,MAAQ,YAAY,SAAY,CAErC,GAAA,EADQ,MAAMJ,EAAS,UAAU,uBAAuBiD,CAAK,GACxD,QAAS,CAChB,cAAc7C,EAAW,KAAK,EAC9B,MAAM8C,EAAK,MAAMlD,EAAS,UAAU,sBAAsBiD,CAAK,EAC/D/C,EAAW,MAAQ,GACfgD,EAAG,SAAW,UACN3C,EAAA,MAAQ2C,EAAG,OAAO,UACnBA,EAAG,QACFC,GAAAD,EAAG,MAAO,QAAQ,EAC5BhD,EAAW,MAAQ,GAEvB,GACC,GAAI,OACO,CACdiD,GAAU,oBAAqB,QAAQ,EACvCjD,EAAW,MAAQ,EACrB,CACF,CAES,SAAAkD,GAAmBC,EAAyBC,EAA2B,CAC1E,OAAAD,IAAS3D,EAAkB,OACtB,OAAO4D,CAAK,EACVD,IAAS3D,EAAkB,QAC7B,EAAQ4D,EAER,OAAOA,CAAK,CAEvB,CAEA,SAASN,IAAoC,CAE3C,MAAMtB,EAAsB,CAC1B,UAFuCH,KAGvC,eAAgBlB,EAAc,MAC9B,UAAWU,EAAO,MAAM,SAAA,EAE1B,OAAIP,EAAe,QACjB,QAAQ,IAAI,+BAA+B,EACzCkB,EAAA,SAAWjB,EAAiB,MAAM,SAClCiB,EAAA,aAAejB,EAAiB,MAAM,WAAW,aACjDiB,EAAA,YAAcjB,EAAiB,MAAM,WAAW,aAE7CiB,CACT,CAEA,SAASH,IAAuB,CAC9B,MAAMiB,EAAmC,CAAA,EACzC,OAAAzB,EAAO,MAAM,UAAU,QAASA,GAAW,CACzC,MAAMa,EAAW,CACf,OAAQb,EAAO,IAAA,EAEN,UAAAwC,KAAOxC,EAAO,OAAQ,CACzB,MAAAgB,EAAQhB,EAAO,OAAOwC,CAAG,EAC3BxB,EAAM,QACRH,EAAS2B,CAAG,EAAIH,GAAmBrB,EAAM,KAAMA,EAAM,KAAK,EAE9D,CACAS,EAAU,KAAKZ,CAAQ,CAAA,CACxB,EAEMY,CACT,CAEA,OAAAgB,EACE,IAAMzC,EAAO,MACb,IAAM,CACOG,EAAA,MAAQH,EAAO,MAAM,IAClC,EACA,CACE,KAAM,EACR,CAAA,EAGK,CACL,WAAAb,EACA,UAAAK,EACA,OAAAQ,EACA,WAAAO,EACA,aAAAL,EACA,WAAAC,EACA,wBAAA4B,GACA,YAAAnB,EACA,iBAAAM,EACA,WAAAC,EACA,gBAAAG,EACA,aAAAC,EACA,UAAAF,EACA,qBAAAG,EACA,eAAAG,EACA,oBAAAC,GACA,mBAAAC,GACA,cAAApB,EACA,yBAAAL,EACA,cAAAE,EACA,cAAAhB,EACA,eAAAG,EACA,iBAAAC,CAAA,CAEJ,EACA,CACE,QAAS,CACP,IAAK,mBACL,MAAO,CAAC,eAAgB,YAAY,CACtC,CACF,CACF,qIClOM,MAAAgD,EAAaC,EAAgBC,EAAA,YAAC,gwCC2BpC,MAAMC,EAAgB9D,IAMhB8B,EAAW8B,EAAwCC,EAAA,YAAA,EAEnDE,EAAgBzC,EAAS,IAAM,OAAO,KAAKQ,EAAS,MAAM,MAAM,EAAE,OAAS,CAAC,EAElF,SAASkC,GAAgB,CACnBD,EAAc,QAChBjC,EAAS,MAAM,eAAiB,CAACA,EAAS,MAAM,eAEpD,y7CCtBA,MAAMgC,EAAgB9D,IAChBiE,EAAiB5D,EAAI,EAAE,EACvB6D,EAAU7D,EAAI,EAAK,EAEnB8D,EAAc7C,EAAS,IAC3BwC,EAAc,aAAa,OAAQlC,GAAMA,EAAE,OAASkC,EAAc,OAAO,IAAI,EAAE,IAAKlC,GAAMA,EAAE,IAAI,CAAA,g1DCZlG,MAAMkC,EAAgB9D,20CCfhB,MAAAoE,EAAgBR,EAAWC,EAAA,YAGhC,EACK3D,EAAWC,IAEXkE,EAAe/C,EAAS,IAAM,CAC5B,MAAAgD,EAAYpE,EAAS,UAAU,aAClC,OAAQqE,GAAOA,EAAG,OAASA,EAAG,SAAS,EACvC,KAAK,CAACC,EAAGC,IAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,CAAC,EAExCC,EAAcxE,EAAS,UAAU,aACpC,OAAQqE,GAAOA,EAAG,OAAS,CAACA,EAAG,SAAS,EACxC,KAAK,CAACC,EAAGC,IAAMD,EAAE,KAAK,cAAcC,EAAE,IAAI,CAAC,EAEvC,MAAA,CACL,CAAE,MAAO,YAAa,QAASH,EAAU,IAAKK,GAAMA,EAAE,IAAI,CAAE,EAC5D,CAAE,MAAO,cAAe,QAASD,EAAY,IAAKC,GAAMA,EAAE,IAAI,CAAE,CAAA,CAClE,CACD,EAEKC,EAAkBtD,EAAS,IAAM,OAIrC,QAHYd,EAAAN,EAAS,UAAU,aAAa,KACzCqE,GAAOA,EAAG,OAASH,EAAc,MAAM,QACvC,IAFS,YAAA5D,EAET,cACW,CAAA,CAAC,CAChB,EAEKqE,EAAavD,EAAoC,IAC9CsD,EAAgB,MAAM,IAAKE,IAE9B,CACE,KAAM,GAAGA,EAAG,WAAW,IAAIA,EAAG,YAAY,GAC1C,MAAOA,CAAA,EAGZ,CACF,EAED,OAAApB,EACE,IAAMU,EAAc,MAAM,SAC1B,IAAM,CACAQ,EAAgB,MAAM,OAAS,IACjCR,EAAc,MAAM,WAAaQ,EAAgB,MAAM,CAAC,EAE5D,CAAA,EAGFG,GAAU,IAAM,CACV7E,EAAS,UAAU,aAAa,SAAW,GAC7CA,EAAS,UAAU,iBACrB,CACD,0nCCoBD,MAAMA,EAAWC,IACX2D,EAAgB9D,IAEhBgF,EAAqB3E,EAAgB,CAAA,CAAE,EACvC4E,EAAoB5E,EAAwB,IAAI,EAChD6E,EAAuB7E,EAAwB,IAAI,EACnD8E,EAAe9E,EAA0B,QAAQ,EAEjD+E,EAAc9D,EAAS,IACpBwC,EAAc,OAAO,UAAU,QAAU,CACjD,EAEW,OAAAuB,GAAAH,EAAsBF,EAAmB,MAAO,CAC1D,MAAO,CACL,KAAM,eACN,KAAM,QACN,IAAK,EACP,EACA,KAAM,GACN,OAAQ,WACR,UAAW,UAAA,CACZ,EAEWK,GAAAJ,EAAmBnB,EAAc,OAAO,UAAW,CAC7D,OAAQ,UACR,MAAO,eACP,SAAU,MAAOa,GAAM,CACrBW,GAAiBxB,EAAc,OAAO,UAAWa,EAAE,SAAUA,EAAE,QAAQ,CACzE,EACA,MAAQA,GAAM,CACZ,MAAM7C,EAAWkD,EAAmB,MAAML,EAAE,QAAQ,EACtCb,EAAA,YAAYhC,EAAU6C,EAAE,QAAQ,EAE5CA,EAAA,MAAM,YAAYA,EAAE,IAAI,EAC1BA,EAAE,MAAM,QACV,CAAA,CACD,EAEDI,GAAU,SAAY,CACpBC,EAAmB,OAAS,MAAM9E,EAAS,UAAU,aAAA,GAAgB,UAAU,KAAK,CAACsE,EAAGC,IAGtFD,EAAE,wBAA0BC,EAAE,sBAC1BD,EAAE,KAAK,cAAcC,EAAE,IAAI,EAC3BD,EAAE,sBACA,GACA,CAAA,EAEMV,EAAA,qBACZA,EAAc,cAAcA,EAAc,UAAU,EAAIA,EAAc,WAAa,SAAA,CACrF,CACD,EAEDJ,EACE,IAAMI,EAAc,UACpB,IAAM,CACJqB,EAAa,MAAQ,SACvB,CAAA"}