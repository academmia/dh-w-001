{"version":3,"file":"SettingsView-4WqfSKJF.js","sources":["../../src/views/SettingsView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-3\">\r\n    <b-card header=\"FreqUI Settings\">\r\n      <div class=\"text-start d-flex flex-column gap-2\">\r\n        <p>UI Version: {{ settingsStore.uiVersion }}</p>\r\n        <div class=\"d-flex flex-column border rounded p-2 mb-2 gap-2\">\r\n          <h4>UI settings</h4>\r\n          <b-form-group\r\n            description=\"Lock dynamic layouts, so they cannot move anymore. Can also be set from the navbar at the top.\"\r\n          >\r\n            <b-form-checkbox v-model=\"layoutStore.layoutLocked\">Lock layout</b-form-checkbox>\r\n          </b-form-group>\r\n          <b-form-group description=\"Reset dynamic layouts to how they were.\">\r\n            <b-button size=\"sm\" class=\"me-1\" @click=\"resetDynamicLayout\">Reset layout</b-button>\r\n          </b-form-group>\r\n          <b-form-group\r\n            label=\"Show open trades in header\"\r\n            description=\"Decide if open trades should be visualized\"\r\n          >\r\n            <b-form-select\r\n              v-model=\"settingsStore.openTradesInTitle\"\r\n              :options=\"openTradesOptions\"\r\n            ></b-form-select>\r\n          </b-form-group>\r\n          <b-form-group\r\n            label=\"UTC Timezone\"\r\n            description=\"Select timezone (we recommend UTC is recommended as exchanges usually work in UTC)\"\r\n          >\r\n            <b-form-select\r\n              v-model=\"settingsStore.timezone\"\r\n              :options=\"timezoneOptions\"\r\n            ></b-form-select>\r\n          </b-form-group>\r\n          <b-form-group description=\"Keep background sync running while other bots are selected.\">\r\n            <b-form-checkbox v-model=\"settingsStore.backgroundSync\"\r\n              >Background sync</b-form-checkbox\r\n            >\r\n          </b-form-group>\r\n          <b-form-group description=\"Use confirmation dialogs when force-exiting a trade.\">\r\n            <b-form-checkbox v-model=\"settingsStore.confirmDialog\"\r\n              >Show Confirm Dialog for Trade Exits</b-form-checkbox\r\n            >\r\n          </b-form-group>\r\n        </div>\r\n\r\n        <div class=\"d-flex flex-column border rounded p-2 mb-2 gap-2\">\r\n          <h4>Candle settings</h4>\r\n          <b-form-group description=\"Use Heikin Ashi candles in your charts\">\r\n            <b-form-checkbox v-model=\"settingsStore.useHeikinAshiCandles\"\r\n              >Use Heikin Ashi candles.</b-form-checkbox\r\n            >\r\n          </b-form-group>\r\n          <b-form-group description=\"Candle Color Preference\">\r\n            <b-form-radio-group\r\n              id=\"settings-color-preference-radio-group\"\r\n              v-model=\"colorStore.colorPreference\"\r\n              name=\"color-preference-options\"\r\n              @change=\"colorStore.updateProfitLossColor\"\r\n            >\r\n              <b-form-radio\r\n                v-for=\"option in colorPreferenceOptions\"\r\n                :key=\"option.value\"\r\n                :value=\"option.value\"\r\n              >\r\n                <div class=\"d-flex\">\r\n                  <span class=\"me-2\">{{ option.text }}</span>\r\n                  <i-mdi-arrow-up-thin\r\n                    :color=\"\r\n                      option.value === ColorPreferences.GREEN_UP\r\n                        ? colorStore.colorProfit\r\n                        : colorStore.colorLoss\r\n                    \"\r\n                    class=\"color-candle-arrows\"\r\n                  />\r\n                  <i-mdi-arrow-down-thin\r\n                    :color=\"\r\n                      option.value === ColorPreferences.GREEN_UP\r\n                        ? colorStore.colorLoss\r\n                        : colorStore.colorProfit\r\n                    \"\r\n                    class=\"color-candle-arrows\"\r\n                  />\r\n                </div>\r\n              </b-form-radio>\r\n            </b-form-radio-group>\r\n          </b-form-group>\r\n        </div>\r\n        <div class=\"d-flex flex-column border rounded p-2 mb-2 gap-2\">\r\n          <b-form-group description=\"Notifications\">\r\n            <h4>Notification Settings</h4>\r\n            <b-form-checkbox v-model=\"settingsStore.notifications[FtWsMessageTypes.entryFill]\"\r\n              >Entry notifications</b-form-checkbox\r\n            >\r\n            <b-form-checkbox v-model=\"settingsStore.notifications[FtWsMessageTypes.exitFill]\"\r\n              >Exit notifications</b-form-checkbox\r\n            >\r\n            <b-form-checkbox v-model=\"settingsStore.notifications[FtWsMessageTypes.entryCancel]\"\r\n              >Entry Cancel notifications</b-form-checkbox\r\n            >\r\n            <b-form-checkbox v-model=\"settingsStore.notifications[FtWsMessageTypes.exitCancel]\"\r\n              >Exit Cancel notifications</b-form-checkbox\r\n            >\r\n          </b-form-group>\r\n        </div>\r\n      </div>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { OpenTradeVizOptions, useSettingsStore } from '@/stores/settings';\r\nimport { useLayoutStore } from '@/stores/layout';\r\nimport { showAlert } from '@/shared/alerts';\r\nimport { FtWsMessageTypes } from '@/types/wsMessageTypes';\r\nimport { ColorPreferences, useColorStore } from '@/stores/colors';\r\n\r\nconst settingsStore = useSettingsStore();\r\nconst colorStore = useColorStore();\r\nconst layoutStore = useLayoutStore();\r\n\r\nconst timezoneOptions = ['UTC', Intl.DateTimeFormat().resolvedOptions().timeZone];\r\nconst openTradesOptions = [\r\n  { value: OpenTradeVizOptions.showPill, text: 'Show pill in icon' },\r\n  { value: OpenTradeVizOptions.asTitle, text: 'Show in title' },\r\n  { value: OpenTradeVizOptions.noOpenTrades, text: \"Don't show open trades in header\" },\r\n];\r\nconst colorPreferenceOptions = [\r\n  { value: ColorPreferences.GREEN_UP, text: 'Green Up/Red Down' },\r\n  { value: ColorPreferences.RED_UP, text: 'Green Down/Red Up' },\r\n];\r\n\r\nconst resetDynamicLayout = () => {\r\n  layoutStore.resetTradingLayout();\r\n  layoutStore.resetDashboardLayout();\r\n  showAlert('Layouts have been reset.');\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.color-candle-arrows {\r\n  margin-left: -0.5rem;\r\n  margin-top: 2px;\r\n}\r\n</style>\r\n"],"names":["settingsStore","useSettingsStore","colorStore","useColorStore","layoutStore","useLayoutStore","timezoneOptions","openTradesOptions","OpenTradeVizOptions","colorPreferenceOptions","ColorPreferences","resetDynamicLayout","showAlert"],"mappings":"+sCAoHA,MAAMA,EAAgBC,IAChBC,EAAaC,IACbC,EAAcC,IAEdC,EAAkB,CAAC,MAAO,KAAK,iBAAiB,gBAAA,EAAkB,QAAQ,EAC1EC,EAAoB,CACxB,CAAE,MAAOC,EAAoB,SAAU,KAAM,mBAAoB,EACjE,CAAE,MAAOA,EAAoB,QAAS,KAAM,eAAgB,EAC5D,CAAE,MAAOA,EAAoB,aAAc,KAAM,kCAAmC,CAAA,EAEhFC,EAAyB,CAC7B,CAAE,MAAOC,EAAiB,SAAU,KAAM,mBAAoB,EAC9D,CAAE,MAAOA,EAAiB,OAAQ,KAAM,mBAAoB,CAAA,EAGxDC,EAAqB,IAAM,CAC/BP,EAAY,mBAAmB,EAC/BA,EAAY,qBAAqB,EACjCQ,EAAU,0BAA0B,CAAA"}